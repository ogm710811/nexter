@import "base";

.gallery {
	background-color:$color-grey-light-1;
	grid-column: full-bleed-start / full-bleed-end;

	// gallery grid setup
	display: grid;
	grid-template-columns: repeat(8, 1fr);
	grid-template-rows: repeat(7, 5vw); // the height of the rows is defined in vw to maintain the aspect-ratio of the img
	grid-gap: 1.5rem;
	padding: 1.5rem;

	// IMPORTANT !! Remember that because of its aspect-radio images they don't fit as other elements in the grid
	// because of that we need a solution to make the image fills the grid cell.
	// we are going to apply the object-fit property to the image.
	// for that we need to wrap the image with a container so the image can fit to its parent
	// example a figure element (see html markup)
	// here the solution ..
	&__item {

		&--1 {
			grid-column: 1 / span 2;
			grid-row: 1 / span 2;
		}

		&--2 {
			grid-column: 3 / span 3;
			grid-row: 1 / span 3;
		}

		&--3 {
			grid-column: 6 / span 1;
			grid-row: 1 / span 2;
		}

		&--4 {
			grid-column: 7 / -1;
			grid-row: 1 / span 2;
		}

		&--5 {
			grid-column: 1 / span 2;
			grid-row: 3 / span 3;
		}

		&--6 {
			grid-column: 3 / span 2;
			grid-row: 4 / span 2;
		}

		&--7 {
			grid-column: 5 / span 1;
			grid-row: 4 / span 1;
		}

		&--8 {
			grid-column: 6 / span 2;
			grid-row: 3 / span 2;
		}

		&--9 {
			grid-column: 8 / -1;
			grid-row: 3 / span 3;
		}

		&--10 {
			grid-column: 1 / span 1;
			grid-row: 6 / -1;
		}

		&--11 {
			grid-column: 2 / span 2;
			grid-row: 6 / -1;
		}

		&--12 {
			grid-column: 4 / span 1;
			grid-row: 6 / -1;
		}

		&--13 {
			grid-column: 5 / span 3;
			grid-row: 5 / -1;
		}

		&--14 {
			grid-column: 8 / -1;
			grid-row: 6  / -1;
		}
	}

	&__img {
		width: 100%;
		height: 100%;
		// IMPORTANT!! object-fit property requires width and height values
		object-fit: cover;
		display: block;
	}
}
